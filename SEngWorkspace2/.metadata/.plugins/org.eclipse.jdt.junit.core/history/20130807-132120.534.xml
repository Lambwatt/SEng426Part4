<?xml version="1.0" encoding="UTF-8"?>
<testrun name="RegistryImplTest" project="JWP" tests="32" started="32" failures="1" errors="2" ignored="0">
  <testsuite name="jmonkey.export.RegistryImplTest" time="0.003">
    <testcase name="test_RegistryImpl1_Null" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_RegistryImpl1_valid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_RegistryImpl2_emptyFile" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_RegistryImpl2_invalidVersion" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_toString" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_commit" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_revert" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_stringToVersion_valid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_stringToVersion_null" classname="jmonkey.export.RegistryImplTest" time="0.0">
      <failure>java.lang.AssertionError: unexpected IllegalArgumentException in test_stringToVersion
	at org.junit.Assert.fail(Assert.java:91)
	at jmonkey.export.RegistryImplTest.test_stringToVersion_null(RegistryImplTest.java:142)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

</failure>
    </testcase>
    <testcase name="test_versionToString_valid" classname="jmonkey.export.RegistryImplTest" time="0.001"/>
    <testcase name="test_checkVersion_valid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_checkVersion_invalid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_setBasicProperty_valid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_setBasicProperty_invalidValue" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_getBasicProperty_missingKey" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_isArrayType" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_isArrayType_nullGroup" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_isArrayType_nullKey" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_getType" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_getType_nullGroup" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_getType_nullKey" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_typeToMarker_valid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_MarkerToType_valid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_typeToMarker_invalid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_markerToType_valid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_markerToType_invalid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_markerToType_null" classname="jmonkey.export.RegistryImplTest" time="0.002">
      <error>java.lang.NullPointerException
	at jmonkey.export.RegistryImpl.markerToType(RegistryImpl.java:434)
	at jmonkey.export.RegistryImplTest.test_markerToType_null(RegistryImplTest.java:522)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

</error>
    </testcase>
    <testcase name="test_encode_valid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_encode_null" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_decode_valid" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_decode_null" classname="jmonkey.export.RegistryImplTest" time="0.0"/>
    <testcase name="test_getters" classname="jmonkey.export.RegistryImplTest" time="0.0">
      <error>jmonkey.export.RegistryTypeException: a property of type Object cannot be set: group = obj, key = -84|-19|0|5|115|114|0|17|106|97|118|97|46|108|97|110|103|46|73|110|116|101|103|101|114|18|-30|-96|-92|-9|-127|-121|56|2|0|1|73|0|5|118|97|108|117|101|120|114|0|16|106|97|118|97|46|108|97|110|103|46|78|117|109|98|101|114|-122|-84|-107|29|11|-108|-32|-117|2|0|0|120|112|0|0|0|0|
	at jmonkey.export.RegistryGroup.checkValue(RegistryGroup.java:148)
	at jmonkey.export.RegistryGroup.setProperty(RegistryGroup.java:90)
	at jmonkey.export.RegistryImpl.setBasicProperty(RegistryImpl.java:328)
	at jmonkey.export.RegistryImpl.setProperty(RegistryImpl.java:680)
	at jmonkey.export.RegistryImplTest.test_getters(RegistryImplTest.java:672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

</error>
    </testcase>
  </testsuite>
</testrun>
